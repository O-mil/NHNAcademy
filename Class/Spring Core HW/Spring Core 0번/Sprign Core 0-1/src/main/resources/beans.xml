<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">



<!--    &lt;!&ndash; AspectJ 컴파일러 사용 설정 &ndash;&gt;-->
<!--    <aop:aspectj-autoproxy/>-->
    위 문구나 아래 aop 문구  둘 중 하나만 있어야 함. 둘 다 있으면 annotation이 두 번 돈다

    <bean id="doorayMessageSender" class="com.nhnacademy.springcore.sender.DoorayMessageSender"></bean>
    <bean id = "messageSender" class="com.nhnacademy.springcore.sender.MessageSender" abstract="true"></bean>
    <bean id = "doorayHookSender" class="com.nhnacademy.springcore.sender.DoorayHookSender"></bean>

    <!-- Aspect 클래스의 빈 등록 -->
    <bean id="loggingAspect" class="com.nhnacademy.springcore.annotation.LoggingAspect"></bean>


    <!-- aop 태그-->
    <aop:config>
        <aop:aspect ref="loggingAspect">
            <aop:around pointcut="@annotation(com.nhnacademy.springcore.annotation.TimeAnnotation) &amp;&amp; args(user, ..)"
                        method="loggingExecutionTime"/>
        </aop:aspect>
    </aop:config>

</beans>
